---
kind: Service
apiVersion: v1
metadata:
  name: rucio-server-cms
spec:
  selector:
    run: rucio-server-cms

# All the ports that are open in the container. Label correctly as we figure out what they are
  ports:
  - name: rucio1
    protocol: TCP
    port: 443
    targetPort: 443
  - name: rucio2
    protocol: TCP
    port: 8443
    targetPort: 8443
  - name: rucio3
    protocol: TCP
    port: 80
    targetPort: 80
  - name: rucio4
    protocol: TCP
    port: 8080
    targetPort: 8080
  - name: supervisord
    protocol: TCP
    port: 8088
    targetPort: 8088
...

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rucio-server-cms
  labels:
    run: rucio-server-cms
spec:
  replicas: 1
  selector:
    matchLabels:
      run: rucio-server-cms
  template:
    metadata:
      labels:
        run: rucio-server-cms
    spec:

    # Main container containing all the Rucio stuff
      containers:
      - name: rucio-server-cms
        image: ericvaandering/rucio_server_cms
        securityContext:
          privileged: true
        ports:
        - containerPort: 80
        - containerPort: 443
        - containerPort: 8443
        - containerPort: 8080
        - containerPort: 8088
        # Environment variable wtih the DB connect string (Oracle, Postgres, etc)
        env:
        - name: DBURL
          valueFrom:
            secretKeyRef:
              name: dburl
              key: DBURL.txt
        # Openstack gives us the cert and key for the host, so mount them
        volumeMounts:
        - name: hostkey
          mountPath: /etc/grid-security/hostkey.pem
          readOnly: true
        - name: hostcert
          mountPath: /etc/grid-security/hostcert.pem
          readOnly: true

      # Openstack gives us the cert and key for the host, so mount them
      volumes:
      - name: hostkey
        hostPath:
          path: /etc/grid-security/hostkey.pem
          type: File
      - name: hostcert
        hostPath:
          path: /etc/grid-security/hostcert.pem
          type: File
...
